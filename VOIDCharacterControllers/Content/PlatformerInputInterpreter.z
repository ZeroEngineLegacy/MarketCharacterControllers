class PlatformerInputInterpreter2D : ZilchComponent
{
    [Dependency]
    var Orientation : Orientation;
    
    [Property]
    var UpKey : Keys = Keys.W;
    
    [Property]
    var LeftKey : Keys = Keys.A;
    
    [Property]
    var DownKey : Keys = Keys.S;
    
    [Property]
    var RightKey : Keys = Keys.D;
    
    [Property]
    var JumpKey : Keys = Keys.Space;
    
    [Property]
    var SprintKey : Keys = Keys.Shift;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var move = Real3();
        if(Zero.Keyboard.KeyIsDown(this.UpKey))
        {
            move += this.Orientation.WorldUp;
        }
        if(Zero.Keyboard.KeyIsDown(this.DownKey))
        {
            move += -this.Orientation.WorldUp;
        }
        if(Zero.Keyboard.KeyIsDown(this.LeftKey))
        {
            move += this.Orientation.WorldRight;
        }
        if(Zero.Keyboard.KeyIsDown(this.RightKey))
        {
            move += -this.Orientation.WorldRight;
        }
        
        
    }
}

class CharUpdate : UpdateEvent
{
    sends CharUpdate : CharUpdate;
    
    var MoveDir : Real3;
}